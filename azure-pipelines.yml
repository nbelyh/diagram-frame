variables:
- name: Version
  value: '1.2'

name: $(Version).$(BuildID)

trigger:
- master

resources:
  repositories:
  - repository: diagram-frame-releases
    type: github
    name: nbelyh/diagram-frame-releases
    endpoint: github.com_nbelyh
    ref: main

stages:
- stage: 'build'
  displayName: 'build'
  jobs:
  - job: 'build'
    pool:
      vmImage: 'ubuntu-latest'
      demands:
      - npm
      - node.js
    variables:
      npm_config_cache: $(Pipeline.Workspace)/.npm
    steps:
      - task: NodeTool@0
        displayName: 'Use Node 16.x'
        inputs:
          versionSpec: 16.x

      - script: npm ci
        displayName: 'npm ci'

      - script: npm version --no-git-tag-version --commit-hooks false "$(Build.BuildNumber)"
        displayName: 'Set App Version'

      - task: gulp@1
        displayName: 'Update version in source files'
        inputs:
          targets: 'update-version'

      - script: npm test
        displayName: 'npm test'

      - task: gulp@1
        displayName: 'Bundle project'
        inputs:
          targets: bundle
          arguments: '--ship'

      - task: gulp@1
        displayName: 'Package Solution'
        inputs:
          targets: 'package-solution'
          arguments: '--ship'

      - task: CopyFiles@2
        displayName: 'Copy SPFx files to artifcacts'
        inputs:
          Contents: sharepoint/**/*.sppkg
          TargetFolder: '$(Build.ArtifactStagingDirectory)'

      - task: CopyFiles@2
        displayName: 'Copy DIST files to artifacts'
        inputs:
          Contents: dist/**/*
          TargetFolder: '$(Build.ArtifactStagingDirectory)'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: drop'

- stage: GitHubRelease
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  pool:
    vmImage: 'windows-latest'
  jobs:
  - deployment: GitHubRelease
    environment: 'github'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                $versionFull = "$(Build.BuildNumber)"
                $version = $versionFull|%{[System.Version]$_}
                $versionShort = "$($version.Major).$($version.Minor)"
                Write-Host "##vso[task.setvariable variable=versionShort]$($versionShort)"

          - checkout: diagram-frame-releases
            path: diagram-frame-releases
            persistCredentials: true

          - task: PowerShell@2
            displayName: 'Git pull'
            inputs:
              targetType: 'inline'
              workingDirectory: '$(Agent.BuildDirectory)/diagram-frame-releases'
              script: |
                git checkout main
                git pull

          - task: CopyFiles@2
            displayName: 'Copy build artifacts to releases repo'
            inputs:
              SourceFolder: '$(System.ArtifactsDirectory)/drop/dist'
              Contents: '**'
              TargetFolder: '$(Agent.BuildDirectory)/diagram-frame-releases/$(Build.BuildNumber)'

          - task: PowerShell@2
            displayName: 'Git commit'
            inputs:
              targetType: 'inline'
              workingDirectory: '$(Agent.BuildDirectory)/diagram-frame-releases'
              script: |
                git config user.email "build@unmanagedvisio.com"
                git config user.name "Azure Pipelines Build"
                git add .
                git commit -m "Release $(Build.BuildNumber)"
                git push origin main

          - task: GitHubRelease@1
            inputs:
              gitHubConnection: 'github.com_nbelyh'
              repositoryName: '$(Build.Repository.Name)'
              action: 'edit'
              target: '$(Build.SourceVersion)'
              tag: '$(versionShort)'
              title: '$(Build.BuildNumber)'
              releaseNotesSource: 'inline'
              releaseNotesInline: 'TBD'
              assets: '$(System.ArtifactsDirectory)/drop/sharepoint/solution/*.sppkg'
              isPreRelease: true
              changeLogCompareToRelease: 'lastFullRelease'
              changeLogType: 'commitBased'
